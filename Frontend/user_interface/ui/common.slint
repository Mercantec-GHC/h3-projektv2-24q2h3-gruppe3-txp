import { Button } from "std-widgets.slint";

struct ButtonColors {
    base: color,
    pressed: color,
    hovered: color,
}
export struct User {
    name: string,
    score: int,
    identifier: int,
} 

export global palette {
    in property <bool> night-mode: false;
    out property <color> text: night-mode ? #000000 : #FFFFFF;
    out property <color> main: #ff6f00;
    out property <color> background: #2e2d2d;
    out property <color> background-darker: #252323;

    out property <color> inactive: #ffffff;
    out property <color> primary-push-button-base: #ff0000;
    out property <ButtonColors> primary-push-button-colors: {
        base: root.primary-push-button-base,
        pressed: root.primary-push-button-base.darker(40%),
        hovered: root.primary-push-button-base.darker(20%),
    };
}

export component Page inherits Rectangle {
    background: palette.background;
    callback back();
}

export global pageination {
    in-out property <int> activepage: 2;
}

export component BackToDashBoard {
    x: 0;
    y: 0;
    width: 20px;
    height: 20px;
    Rectangle {
        background: red;
        Text {
            text: "X";
        }

        TouchArea {
            width: parent.width;
            height: parent.height;
            clicked => {
                pageination.activepage = 0;
                properties.sidebartest = true;
                properties.sidebaractive = true;
            }
        }
    }
}

export global UserId {
    in-out property <string> Username;
    in-out property <int> Identifier;
}

export struct Credentials {
    username: string,
    password: string,
}



export global properties {
    in-out property <Credentials> currentuser;
    in-out property <bool> usercreated;
    in-out property <bool> sidebaractive: false;
    in-out property <bool> sidebartest: false;
    in-out property <[User]> user:[
        { name:"Phami", score:0 },
        { name: "Druumihra", score:9999999 },
        { name: "Patrick", score: 10 },
        { name:"Phami", score:0 },
        { name: "Druumihra", score:9999999 }
    ];
    in property <[string]> Devices;
    in-out property <bool> logged-in: false;
    in-out property <string> instanceId;
    in-out property <string> date: "00:00:0000";
    in-out property <string> time: "00:00";
    out property <[string]> games: ["Snake", "Brick Breaker", "Pong", "side-scroller"];
    in-out property <string> token;
    in-out property <bool> loading: false;
    in-out property <string> error;
    in-out property <int> userscore;
}

export global callbacks {
    callback request-login(Credentials, string);
    callback request-create-user(Credentials);
    callback get-user-scores(User) -> User;
    pure callback get-scores(int, string);
    pure callback get-devices();
    callback get-user-data(string);
}
